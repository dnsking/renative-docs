"use strict";(self.webpackChunkrenative_docs=self.webpackChunkrenative_docs||[]).push([[5894],{6122:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return d},default:function(){return m}});var i=t(7462),l=t(3366),a=(t(7294),t(3905)),r=["components"],o={id:"config_folders",title:"Config Folders",sidebar_label:"Config Folders",original_id:"config_folders"},p=void 0,s={unversionedId:"guides/config_folders",id:"guides/config_folders",title:"Config Folders",description:"Overview",source:"@site/docs/guides/config-folders.md",sourceDirName:"guides",slug:"/guides/config_folders",permalink:"/docs/guides/config_folders",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/guides/config-folders.md",tags:[],version:"current",frontMatter:{id:"config_folders",title:"Config Folders",sidebar_label:"Config Folders",original_id:"config_folders"},sidebar:"docsSidebar",previous:{title:"Common Issues",permalink:"/docs/guides/common_issues"},next:{title:"Config Files",permalink:"/docs/guides/config"}},d=[{value:"Overview",id:"overview",children:[],level:2},{value:"Structure",id:"structure",children:[],level:2},{value:"Merges",id:"merges",children:[],level:2},{value:"Special Folders",id:"special-folders",children:[],level:2},{value:"File Overrides / Injectors",id:"file-overrides--injectors",children:[],level:2},{value:"Platform Builds Overrides",id:"platform-builds-overrides",children:[{value:"Platform Assets Overrides",id:"platform-assets-overrides",children:[],level:3},{value:"Build Flavour Injectors",id:"build-flavour-injectors",children:[],level:3},{value:"Flavoured Builds",id:"flavoured-builds",children:[],level:3}],level:2},{value:"Files / Assets",id:"files--assets",children:[{value:"\u2705 What to add to <code>./appConfigs/*/**</code>",id:"-what-to-add-to-appconfigs",children:[],level:4},{value:"\u274c What NOT to add to <code>./appConfigs/*/**</code>",id:"-what-not-to-add-to-appconfigs",children:[],level:4}],level:2}],u={toc:d};function m(e){var n=e.components,t=(0,l.Z)(e,r);return(0,a.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("img",{className:"header-image",src:"https://renative.org/img/ic_appconfigs.png",width:"50",height:"50"}),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Legend:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"[PLATFORM]")," - specific platform key like ",(0,a.kt)("inlineCode",{parentName:"li"},"ios"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"android"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"web"),", etc.."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"[APP_ID]")," - name of your folder in ",(0,a.kt)("inlineCode",{parentName:"li"},"./appConfigs")," which contains specific ",(0,a.kt)("inlineCode",{parentName:"li"},"renative.json")," file"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"[PROJECT_NAME]")," - ",(0,a.kt)("inlineCode",{parentName:"li"},"name")," field in the root ",(0,a.kt)("inlineCode",{parentName:"li"},"package.json")," file of your project"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"[PLUGIN_ID]")," - ",(0,a.kt)("inlineCode",{parentName:"li"},"key")," of the plugin defined in one of the ",(0,a.kt)("inlineCode",{parentName:"li"},"renative.json")," files"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"[WORKSPACE_PATH]")," - ",(0,a.kt)("inlineCode",{parentName:"li"},"path")," to your workspace (",(0,a.kt)("inlineCode",{parentName:"li"},"~/.rnv")," by default) where local and sensitive information is stored.")),(0,a.kt)("p",null,"NOTE: ",(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]")," folder path can be customised in ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.rnv/renative.workspaces.json")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n    "workspaces": {\n        "rnv": {\n            "path": "~/.rnv"\n        },\n        "SOME_ANOTHER_WORKSPACE_ID": {\n            "path": "<WORKSPACE_PATH>"\n        }\n    }\n}\n')),(0,a.kt)("p",null,"You can then switch to custom workspace per each project ",(0,a.kt)("inlineCode",{parentName:"p"},"./renative.json")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n  "workspaceID": "SOME_ANOTHER_WORKSPACE_ID"\n}\n')),(0,a.kt)("h2",{id:"structure"},"Structure"),(0,a.kt)("p",null,"applies for both public and private ",(0,a.kt)("inlineCode",{parentName:"p"},"./..")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"~./rnv/[PROJECT_NAME]/..")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},".\n\u2514\u2500\u2500 appConfigs\n    \u251c\u2500\u2500 base\n    \u2502   \u251c\u2500\u2500 fonts\n    \u2502   \u251c\u2500\u2500 plugins\n    \u2502   \u2514\u2500\u2500 builds\n    \u2514\u2500\u2500 [APP_ID]          # Extend / Override appConfigs/base\n        \u251c\u2500\u2500 assets\n        \u2502   \u2514\u2500\u2500 [PLATFORM]\n        \u251c\u2500\u2500 fonts\n        \u251c\u2500\u2500 builds\n        \u2514\u2500\u2500 plugins\n            \u2514\u2500\u2500 [PLUGIN_KEY]\n                \u251c\u2500\u2500 fonts\n                \u2514\u2500\u2500 builds\n")),(0,a.kt)("h2",{id:"merges"},"Merges"),(0,a.kt)("p",null,"Following is the order of merges of various folders (if present) contributing to final ",(0,a.kt)("inlineCode",{parentName:"p"},"platformBuilds/*/**"),"."),(0,a.kt)("p",null,"\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"[RNV_ROOT]/platformTemplates/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"./appConfigs/base/builds/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/base/builds/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"./appConfigs/[APP_ID]/builds/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/[APP_ID]/builds/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"./appConfigs/base/plugins/[PLUGIN_ID]/builds/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/base/plugins/[PLUGIN_ID]/builds/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"./appConfigs/[APP_ID]/plugins/[PLUGIN_ID]/builds/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/[APP_ID]/plugins/[PLUGIN_ID]/builds/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds")),(0,a.kt)("p",null,"Following is the order of merges of various folders (if present) contributing to final ",(0,a.kt)("inlineCode",{parentName:"p"},"platformAssets/*/**"),"."),(0,a.kt)("p",null,"\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"./appConfigs/base/assets/runtime/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets/runtime/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/base/assets/runtime/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets/runtime/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"./appConfigs/[APP_ID]/assets/runtime/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets/runtime/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/[APP_ID]/assets/runtime/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets/runtime/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"./appConfigs/base/plugins/[PLUGIN_ID]/assets/runtime/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets/runtime/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/base/plugins/[PLUGIN_ID]/assets/runtime/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets/runtime/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"./appConfigs/[APP_ID]/plugins/[PLUGIN_ID]/assets/runtime/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets/runtime/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/[APP_ID]/plugins/[PLUGIN_ID]/assets/runtime/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets/runtime/*/*"),(0,a.kt)("br",null),"\n\u2b07\ufe0f\n",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets")),(0,a.kt)("h2",{id:"special-folders"},"Special Folders"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"platformBuilds")," - all builds and projects are dynamically generated"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"platformAssets")," - all shared assets are dynamically copied here"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"appConfigs")," - all configuration files overrides flavours are placed here"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"projectConfig")," - DEPRECATED (use appConfigs/base)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"buildHooks")," - allows you to extend RNV build functionality"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"src")," - source code of the project"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"builds")," - contents of this folder will be injected into ",(0,a.kt)("inlineCode",{parentName:"li"},"./platformBuilds/[APP_ID]_[PLATFORM]")," destination"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"plugins")," - allows you to extend / override project files based on activated plugin"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fonts")," - special folder used for dynamic fonts injections"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"assets")," - contents of this folder will be injected into ",(0,a.kt)("inlineCode",{parentName:"li"},"./platformAssets")," destination")),(0,a.kt)("h2",{id:"file-overrides--injectors"},"File Overrides / Injectors"),(0,a.kt)("p",null,'Every time you run RNV command, ReNative checks following "special" folders and copies contents of those into designated target folders'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"*/plugins/[PLUGIN_ID]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"*/plugins/[PLUGIN_ID]/overrides")," -> special override allows you to override files in plugin itself! (located ",(0,a.kt)("inlineCode",{parentName:"li"},"./node_modules"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"*/builds/[PLATFORM]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"*/fonts")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"*/assets/runtime")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"*/assets/[PLATFORM]"))),(0,a.kt)("p",null,"You can utilise above folders in following places:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"./appConfigs/base")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"./appConfigs/[APP_ID]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/[APP_ID]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/base"))),(0,a.kt)("h2",{id:"platform-builds-overrides"},"Platform Builds Overrides"),(0,a.kt)("p",null,"Project Scoped Build Override"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"./appConfigs/base/builds/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*")),(0,a.kt)("p",null,"Project Scoped Build Override (Private Content)"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/base/builds/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*")),(0,a.kt)("p",null,"App Config Scoped Build Override"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"./appConfigs/[APP_ID]/builds/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*")),(0,a.kt)("p",null,"App Config Scoped Build Override (Private Content)"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/[APP_ID]/builds/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*")),(0,a.kt)("p",null,"Plugin + Project Scoped Build Override"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"./appConfigs/base/plugins/[PLUGIN_ID]/builds/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*")),(0,a.kt)("p",null,"Plugin + Project Scoped Build Override (Private Content)"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/base/plugins/[PLUGIN_ID]/builds/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*")),(0,a.kt)("p",null,"Plugin + App Config Scoped Build Override"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"./appConfigs/[APP_ID]/plugins/[PLUGIN_ID]/builds/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*")),(0,a.kt)("p",null,"Plugin + App Config Scoped Build Override (Private Content)"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/[APP_ID]/plugins/[PLUGIN_ID]/builds/[PLATFORM]/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformBuilds/[APP_ID]_[PLATFORM]/*/*")),(0,a.kt)("h3",{id:"platform-assets-overrides"},"Platform Assets Overrides"),(0,a.kt)("p",null,"Project Scoped Assets Override"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"./appConfigs/base/assets/runtime/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets/runtime/*/*")),(0,a.kt)("p",null,"Project Scoped Assets Override (Private Content)"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/base/assets/runtime/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets/runtime/*/*")),(0,a.kt)("p",null,"App Config Scoped Build Override"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"./appConfigs/[APP_ID]/assets/runtime/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets/runtime/*/*")),(0,a.kt)("p",null,"App Config Scoped Build Override (Private Content)"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/[APP_ID]/assets/runtime/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets/runtime/*/*")),(0,a.kt)("p",null,"Plugin + Project Scoped Build Override"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"./appConfigs/base/plugins/[PLUGIN_ID]/assets/runtime/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets/runtime/*/*")),(0,a.kt)("p",null,"Plugin + Project Scoped Build Override (Private Content)"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/base/plugins/[PLUGIN_ID]/assets/runtime/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets/runtime/*/*")),(0,a.kt)("p",null,"Plugin + App Config Scoped Build Override"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"./appConfigs/[APP_ID]/plugins/[PLUGIN_ID]/assets/runtime/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets/runtime/*/*")),(0,a.kt)("p",null,"Plugin + App Config Scoped Build Override (Private Content)"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/[APP_ID]/plugins/[PLUGIN_ID]/assets/runtime/*/**")," => ",(0,a.kt)("inlineCode",{parentName:"p"},"./platformAssets/runtime/*/*")),(0,a.kt)("h3",{id:"build-flavour-injectors"},"Build Flavour Injectors"),(0,a.kt)("p",null,"Sometimes you need to add buildFlavour specific file into project before build. ie Firebase, Crashlytics configs and so on"),(0,a.kt)("p",null,"you can achieve by creating folder with postfix ",(0,a.kt)("inlineCode",{parentName:"p"},"<PLATFORM>@<BUILD_SCHEME_NAME>")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},".\n\u251c\u2500\u2500 appConfigs\n    \u2514\u2500\u2500 helloworld\n        \u251c\u2500\u2500 assets\n        \u251c\u2500\u2500 plugins\n        \u2502   \u2514\u2500\u2500 some-plugin\n        \u2502       \u2514\u2500\u2500 builds\n        \u2502            \u251c\u2500\u2500 android@release\n        \u2502            \u2502   \u2514\u2500\u2500 fileToBeInjectedInReleaseMode.txt\n        \u2502            \u2514\u2500\u2500 android@debug\n        \u2502                \u2514\u2500\u2500 fileToBeInjectedInDebugMode.txt\n        \u2514\u2500\u2500 builds\n            \u251c\u2500\u2500 android@release\n            \u2502   \u2514\u2500\u2500 fileToBeInjectedInReleaseMode.txt\n            \u2514\u2500\u2500 android@debug\n                \u2514\u2500\u2500 fileToBeInjectedInDebugMode.txt\n")),(0,a.kt)("h3",{id:"flavoured-builds"},"Flavoured Builds"),(0,a.kt)("p",null,"Combination of features above allows you to configure and build large number of flavoured builds with almost no extra configuration"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,(0,a.kt)("img",{src:"https://renative.org/img/rnv_arch3.png"})))),(0,a.kt)("h2",{id:"files--assets"},"Files / Assets"),(0,a.kt)("p",null,"Override Rules:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/pavjacko/renative/tree/develop#platform-builds-overrides"},"https://github.com/pavjacko/renative/tree/develop#platform-builds-overrides")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/pavjacko/renative/tree/develop#platform-assets-overrides"},"https://github.com/pavjacko/renative/tree/develop#platform-assets-overrides"))),(0,a.kt)("h4",{id:"-what-to-add-to-appconfigs"},"\u2705 What to add to ",(0,a.kt)("inlineCode",{parentName:"h4"},"./appConfigs/*/**")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"icon assets"),(0,a.kt)("li",{parentName:"ul"},"splash screens"),(0,a.kt)("li",{parentName:"ul"},"runtime configs")),(0,a.kt)("h4",{id:"-what-not-to-add-to-appconfigs"},"\u274c What NOT to add to ",(0,a.kt)("inlineCode",{parentName:"h4"},"./appConfigs/*/**")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"passwords"),(0,a.kt)("li",{parentName:"ul"},"production keys"),(0,a.kt)("li",{parentName:"ul"},"keystores, p12"),(0,a.kt)("li",{parentName:"ul"},"googleservice-info.json"),(0,a.kt)("li",{parentName:"ul"},"fabric keys"),(0,a.kt)("li",{parentName:"ul"},"any other sensitive data")),(0,a.kt)("p",null,"those should be added to private project mirror:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"[WORKSPACE_PATH]/[PROJECT_NAME]/appConfigs/*/**")))}m.isMDXComponent=!0},3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return k}});var i=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,l=function(e,n){if(null==e)return{};var t,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var p=i.createContext({}),s=function(e){var n=i.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=s(e.components);return i.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(t),k=l,f=m["".concat(p,".").concat(k)]||m[k]||u[k]||a;return t?i.createElement(f,r(r({ref:n},d),{},{components:t})):i.createElement(f,r({ref:n},d))}));function k(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,r=new Array(a);r[0]=m;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var s=2;s<a;s++)r[s]=t[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);