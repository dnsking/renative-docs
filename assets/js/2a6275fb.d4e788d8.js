"use strict";(self.webpackChunkrenative_docs=self.webpackChunkrenative_docs||[]).push([[923],{1828:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var o=t(7462),r=t(3366),i=(t(7294),t(3905)),l=["components"],a={id:"build_hooks",title:"Build Hooks",sidebar_label:"Build Hooks",original_id:"build_hooks"},u=void 0,s={unversionedId:"guides/build_hooks",id:"guides/build_hooks",title:"Build Hooks",description:"Overview",source:"@site/docs/guides/build-hooks.md",sourceDirName:"guides",slug:"/guides/build_hooks",permalink:"/docs/guides/build_hooks",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/guides/build-hooks.md",tags:[],version:"current",frontMatter:{id:"build_hooks",title:"Build Hooks",sidebar_label:"Build Hooks",original_id:"build_hooks"},sidebar:"docsSidebar",previous:{title:"Apple Silicon",permalink:"/docs/guides/apple-silicon"},next:{title:"ReNative CLI",permalink:"/docs/guides/cli"}},p=[{value:"Overview",id:"overview",children:[],level:2},{value:"Using RNV in Build Hooks",id:"using-rnv-in-build-hooks",children:[],level:2},{value:"Build Pipes",id:"build-pipes",children:[],level:2},{value:"Run Multiple Pipes on One Hook",id:"run-multiple-pipes-on-one-hook",children:[],level:2}],c={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("img",{className:"header-image",src:"https://renative.org/img/ic_hooks.png",width:"50",height:"50"}),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Sometimes you need to extend CLI functionality with custom build scripts. ReNative makes this easy for you."),(0,i.kt)("p",null,"create file: ",(0,i.kt)("inlineCode",{parentName:"p"},"./buildHooks/src/index.js")," with this script (NOTE: every top-level method must return Promise):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import chalk from 'chalk';\n\nconst hooks = {\n    hello: c =>\n        new Promise((resolve, reject) => {\n            console.log(`\\n${chalk.yellow('HELLO FROM BUILD HOOKS!')}\\n`);\n            resolve();\n        })\n};\n\nconst pipes = {};\n\nexport { pipes, hooks };\n")),(0,i.kt)("p",null,"then simply run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"rnv hooks run -x hello\n")),(0,i.kt)("p",null,"ReNative will transpile and execute it in real time!"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"index.js")," is required entry point but you can create more complex scripts with multiple files/imports."),(0,i.kt)("p",null,"every top-level method gets invoked with ReNative ",(0,i.kt)("inlineCode",{parentName:"p"},"config")," object containing all necessary build information"),(0,i.kt)("h2",{id:"using-rnv-in-build-hooks"},"Using RNV in Build Hooks"),(0,i.kt)("p",null,"You can utilize RNV CLI functionality inside of build hooks by simply importing rnv packages:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import {\n    Constants,\n    Common,\n    Exec,\n    PlatformManager,\n    Doctor,\n    PluginManager,\n    SetupManager,\n    FileUtils\n} from 'rnv';\n")),(0,i.kt)("h2",{id:"build-pipes"},"Build Pipes"),(0,i.kt)("p",null,"Sometimes you want to execute specific hook automatically before/after certain ReNative build phase."),(0,i.kt)("p",null,"To get list of available hook pipes run:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"$ rnv hooks pipes")),(0,i.kt)("p",null,"You can connect your hook method to one of predefined pipes in your ",(0,i.kt)("inlineCode",{parentName:"p"},"./buildHooks/src/index.js"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const pipes = {\n    'configure:before': hooks.hello\n};\n")),(0,i.kt)("p",null,"Example code above will execute ",(0,i.kt)("inlineCode",{parentName:"p"},"hooks.hello()")," before every time you run ",(0,i.kt)("inlineCode",{parentName:"p"},"$ rnv configure")," commands"),(0,i.kt)("h2",{id:"run-multiple-pipes-on-one-hook"},"Run Multiple Pipes on One Hook"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const pipes = {\n    'configure:before': [hooks.hello, hooks.someOtherHook]\n};\n")),(0,i.kt)("p",null,"List of available pipe hooks:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"'run:before', 'run:after',\n'log:before', 'log:after',\n'start:before', 'start:after',\n'package:before', 'package:after',\n'package:before', 'package:after',\n'build:before', 'build:after',\n'export:before', 'export:after',\n'deploy:before', 'deploy:after',\n'configure:before', 'configure:after',\n'platform:configure:before', 'platform:configure:after'\n")))}d.isMDXComponent=!0},3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=o.createContext({}),s=function(e){var n=o.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return o.createElement(u.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=s(t),f=r,k=d["".concat(u,".").concat(f)]||d[f]||c[f]||i;return t?o.createElement(k,l(l({ref:n},p),{},{components:t})):o.createElement(k,l({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=d;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=e,a.mdxType="string"==typeof e?e:r,l[1]=a;for(var s=2;s<i;s++)l[s]=t[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);